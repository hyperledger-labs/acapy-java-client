/*
 * aca-py client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.7.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.hyperledger.acy_py.generated.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;

/**
 * WalletRecord
 */

@lombok.Data
@lombok.AllArgsConstructor
@lombok.NoArgsConstructor
@lombok.Builder
public class WalletRecord {
    public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
    @SerializedName(SERIALIZED_NAME_CREATED_AT)
    private String createdAt;

    /**
     * Mode regarding management of wallet key
     */
    @JsonAdapter(KeyManagementModeEnum.Adapter.class)
    public enum KeyManagementModeEnum {
        MANAGED("managed"),

        UNMANAGED("unmanaged");

        private String value;

        KeyManagementModeEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static KeyManagementModeEnum fromValue(String value) {
            for (KeyManagementModeEnum b : KeyManagementModeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }

        public static class Adapter extends TypeAdapter<KeyManagementModeEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final KeyManagementModeEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public KeyManagementModeEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return KeyManagementModeEnum.fromValue(value);
            }
        }
    }

    public static final String SERIALIZED_NAME_KEY_MANAGEMENT_MODE = "key_management_mode";
    @SerializedName(SERIALIZED_NAME_KEY_MANAGEMENT_MODE)
    private KeyManagementModeEnum keyManagementMode;
    public static final String SERIALIZED_NAME_SETTINGS = "settings";
    @SerializedName(SERIALIZED_NAME_SETTINGS)
    private Object settings;
    public static final String SERIALIZED_NAME_STATE = "state";
    @SerializedName(SERIALIZED_NAME_STATE)
    private String state;
    public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
    @SerializedName(SERIALIZED_NAME_UPDATED_AT)
    private String updatedAt;
    public static final String SERIALIZED_NAME_WALLET_ID = "wallet_id";
    @SerializedName(SERIALIZED_NAME_WALLET_ID)
    private String walletId;
}
