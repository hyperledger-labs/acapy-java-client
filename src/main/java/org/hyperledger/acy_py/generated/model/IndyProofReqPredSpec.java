/*
 * aca-py client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.hyperledger.acy_py.generated.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.util.List;
import java.util.Map;

/**
 * IndyProofReqPredSpec
 */

@lombok.Data
@lombok.AllArgsConstructor
@lombok.NoArgsConstructor
@lombok.Builder
public class IndyProofReqPredSpec {
    public static final String SERIALIZED_NAME_NAME = "name";
    @SerializedName(SERIALIZED_NAME_NAME)
    private String name;
    public static final String SERIALIZED_NAME_NON_REVOKED = "non_revoked";
    @SerializedName(SERIALIZED_NAME_NON_REVOKED)
    private IndyProofReqPredSpecNonRevoked nonRevoked;

    /**
     * Predicate type (&#39;&lt;&#39;, &#39;&lt;&#x3D;&#39;, &#39;&gt;&#x3D;&#39;, or &#39;&gt;&#39;)
     */
    @JsonAdapter(PTypeEnum.Adapter.class)
    public enum PTypeEnum {
        LESS_THAN("<"),

        LESS_THAN_OR_EQUAL_TO("<="),

        GREATER_THAN_OR_EQUAL_TO(">="),

        GREATER_THAN(">");

        private String value;

        PTypeEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static PTypeEnum fromValue(String value) {
            for (PTypeEnum b : PTypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }

        public static class Adapter extends TypeAdapter<PTypeEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final PTypeEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public PTypeEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return PTypeEnum.fromValue(value);
            }
        }
    }

    public static final String SERIALIZED_NAME_P_TYPE = "p_type";
    @SerializedName(SERIALIZED_NAME_P_TYPE)
    private PTypeEnum pType;
    public static final String SERIALIZED_NAME_P_VALUE = "p_value";
    @SerializedName(SERIALIZED_NAME_P_VALUE)
    private Integer pValue;
    public static final String SERIALIZED_NAME_RESTRICTIONS = "restrictions";
    @SerializedName(SERIALIZED_NAME_RESTRICTIONS)
    private List<Map<String, String>> restrictions = null;
}
